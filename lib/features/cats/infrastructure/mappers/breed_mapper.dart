import 'package:cat_explorer/features/cats/cats.dart';

class BreedMapper {
  static Breed breedModelToEntity(BreedModel breedModel) => Breed(
        weight: Weight(
          imperial: breedModel.weight?.imperial,
          metric: breedModel.weight?.metric,
        ),
        id: breedModel.id,
        name: breedModel.name,
        cfaUrl: breedModel.cfaUrl,
        vetstreetUrl: breedModel.vetstreetUrl,
        vcahospitalsUrl: breedModel.vcahospitalsUrl,
        temperament: breedModel.temperament,
        origin: breedModel.origin,
        countryCodes: breedModel.countryCodes,
        countryCode: breedModel.countryCode,
        description: breedModel.description,
        lifeSpan: breedModel.lifeSpan,
        indoor: breedModel.indoor,
        lap: breedModel.lap,
        altNames: breedModel.altNames,
        adaptability: breedModel.adaptability,
        affectionLevel: breedModel.affectionLevel,
        childFriendly: breedModel.childFriendly,
        dogFriendly: breedModel.dogFriendly,
        energyLevel: breedModel.energyLevel,
        grooming: breedModel.grooming,
        healthIssues: breedModel.healthIssues,
        intelligence: breedModel.intelligence,
        sheddingLevel: breedModel.sheddingLevel,
        socialNeeds: breedModel.socialNeeds,
        strangerFriendly: breedModel.strangerFriendly,
        vocalisation: breedModel.vocalisation,
        experimental: breedModel.experimental,
        hairless: breedModel.hairless,
        natural: breedModel.natural,
        rare: breedModel.rare,
        rex: breedModel.rex,
        suppressedTail: breedModel.suppressedTail,
        shortLegs: breedModel.shortLegs,
        wikipediaUrl: breedModel.wikipediaUrl,
        hypoallergenic: breedModel.hypoallergenic,
        referenceImageId: breedModel.referenceImageId,
        image: ImageBreed(
          id: breedModel.image?.id,
          width: breedModel.image?.width,
          height: breedModel.image?.height,
          url: breedModel.image?.url,
        ),
      );
}
